openapi: 3.0.3
info:
  title: Kanban Backend API - OpenAPI 3.0
  description: API para gerenciamento de projetos Kanban, respons√°veis e indicadores.
  contact:
    email: leduar.araujo@hotmail.com
  version: 1.0.0

tags:
  - name: Projeto
    description: Dados relacionados aos projetos
  - name: Responsavel
    description: Dados relacionados aos responsaveis dos projetos
  - name: Indicador
    description: Dados dos indicadores

paths:
  /projetos:
    get:
      operationId: listarProcessos
      tags:
        - Projeto
      summary: Lista todos os projetos
      description: Lista de projetos
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListaProjetoResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'

    post:
      operationId: cadastrarProjeto
      tags:
        - Projeto
      summary: Realiza o cadastro de Projetos
      description: Realiza o cadastro de Projetos
      parameters:

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CadastroFuncionarioRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SucessMessage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - gerenciador:
            - write
            - read

  /api/v1/incluirespaco:
    post:
      operationId: incluirEspaco
      tags:
        - Espaco
      summary: Realiza o cadastro do espaco
      description: Realiza o cadastro do espaco
      parameters:
        - name: token_jwt
          in: header
          required: true
          schema:
            type: string
        - name: idFuncionario
          in: header
          required: true
          schema:
            type: integer
            format: int64

      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CadastroEspacoRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SucessMessage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - gerenciador:
            - write
            - read

  /api/v1/listarespacos:
    get:
      operationId: listarEspacos
      tags:
        - Espaco
      summary: Lista todos os Espacos
      description: Lista todos os espacos cadastrados
      parameters:
        - name: token_jwt
          in: header
          required: true
          schema:
            type: string
        - name: idFuncionario
          in: header
          required: true
          schema:
            type: integer
            format: int64

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListaEspacosResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - gerenciador:
            - write
            - read

components:
  schemas:
    ListaProjetoResponse:
      type: object
      properties:
        listaprojetos:
          type: array
          items:
            $ref: '#/components/schemas/Projeto'

    Projeto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        status:
          type: string
          enum: [A_INICIAR, EM_ANDAMENTO, ATRASADO, CONCLUIDO]
        responsavelId:
          type: integer
          format: int64
        dtInicioPrevisto:
          type: string
          format: date
        dtTerminoPrevisto:
          type: string
          format: date
        dtInicioRealizado:
          type: string
          format: date
        dtTerminoRealizado:
          type: string
          format: date

    Usuario:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        username:
          type: string
        password:
          type: string
          format: password
        email:
          type: string

    Cargo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nmCargo:
          type: string

    Responsavel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        email:
          type: string
        cargoId:
          type: integer
          format: int64
        secretariaId:
          type: integer
          format: int64

    Secretaria:
      type: object
      properties:
        is:
          type: integer
          format: int64
        nmSecretaria:
          type: string


    SucessMessage:
      type: object
      properties:
        message:
          type: string
          example: "Sucesso"
        code:
          type: integer
          example: 0

    ErrorMessage:
      type: object
      properties:
        message:
          type: string
          example: "Error message"
        errorCode:
          type: integer
          example: 123

  securitySchemes:
    gerenciador:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write: escrita
            read: leitura

    api_key:
      type: apiKey
      name: api_key
      in: header