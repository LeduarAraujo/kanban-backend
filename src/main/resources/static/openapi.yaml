openapi: 3.0.3
info:
  title: Kanban Backend API - OpenAPI 3.0
  description: API para gerenciamento de projetos Kanban, responsáveis e indicadores.
  contact:
    email: leduar.araujo@hotmail.com
  version: 1.0.0

tags:
  - name: Projeto
    description: Dados relacionados aos projetos
  - name: Responsavel
    description: Dados relacionados aos responsaveis dos projetos
  - name: Indicador
    description: Dados dos indicadores
  - name: Usuario
    description: Dados de cadastro do usuário

paths:
  /projetos:
    get:
      operationId: listarProcessos
      tags:
        - Projeto
      summary: Lista todos os projetos
      description: Lista de projetos
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListaProjetoResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'

    post:
      operationId: cadastrarProjeto
      tags:
        - Projeto
      summary: Realiza o cadastro de Projetos
      description: Realiza o cadastro de Projetos

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projeto'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SucessMessage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - gerenciador:
            - write
            - read

  /projetos/{id}:
    get:
      operationId: buscarProjetoPorId
      tags:
        - Projeto
      summary: Buscar projeto por ID
      description: Retorna um projeto específico pelo ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID do projeto
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projeto'
        '404':
          description: Projeto não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'

    put:
      operationId: atualizarProjeto
      tags:
        - Projeto
      summary: Atualizar projeto
      description: Atualiza um projeto existente
      parameters:
        - name: id
          in: path
          required: true
          description: ID do projeto
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Projeto'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projeto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Projeto não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'

    delete:
      operationId: excluirProjeto
      tags:
        - Projeto
      summary: Excluir projeto
      description: Exclui um projeto
      parameters:
        - name: id
          in: path
          required: true
          description: ID do projeto
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Projeto excluído com sucesso
        '404':
          description: Projeto não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'

  /projetos/{id}/status:
    put:
      operationId: moverStatusProjeto
      tags:
        - Projeto
      summary: Mover status do projeto
      description: Move o projeto para um novo status seguindo as regras de transição
      parameters:
        - name: id
          in: path
          required: true
          description: ID do projeto
          schema:
            type: integer
            format: int64
        - name: novoStatus
          in: query
          required: true
          description: Novo status do projeto
          schema:
            type: string
            enum: [A_INICIAR, EM_ANDAMENTO, ATRASADO, CONCLUIDO]
      responses:
        '200':
          description: Status alterado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projeto'
        '400':
          description: Transição inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Projeto não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'

  /projetos/por-status:
    get:
      operationId: listarProjetosPorStatus
      tags:
        - Projeto
      summary: Listar projetos por status
      description: Lista projetos filtrados por status específico
      parameters:
        - name: status
          in: query
          required: true
          description: Status para filtrar
          schema:
            type: string
            enum: [A_INICIAR, EM_ANDAMENTO, ATRASADO, CONCLUIDO]
        - name: page
          in: query
          description: Número da página
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          description: Tamanho da página
          schema:
            type: integer
            default: 20
        - name: sort
          in: query
          description: Campo para ordenação
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListaProjetoResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'

  /indicadores/projetos/quantidade-por-status:
    get:
      operationId: quantidadeProjetosPorStatus
      tags:
        - Indicador
      summary: Quantidade de projetos por status
      description: Retorna a quantidade de projetos agrupados por status
      responses:
        '200':
          description: Indicadores retornados com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  type: array
                  items:
                    oneOf:
                      - type: string
                      - type: integer
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'

  /indicadores/projetos/media-atraso-por-status:
    get:
      operationId: mediaDiasAtrasoPorStatus
      tags:
        - Indicador
      summary: Média de dias de atraso por status
      description: Retorna a média de dias de atraso para um status específico
      parameters:
        - name: status
          in: query
          required: true
          description: Status do projeto para calcular a média
          schema:
            type: string
            enum: [A_INICIAR, EM_ANDAMENTO, ATRASADO, CONCLUIDO]
      responses:
        '200':
          description: Média calculada com sucesso
          content:
            application/json:
              schema:
                type: number
                format: double
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'

  /usuario:
    post:
      operationId: cadastrarUsuario
      tags:
        - Usuario
      summary: realiza o cadastro do usuario
      description: realiza o cadastro do usuario para permitir o uso dos usuarios

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SucessMessage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - gerenciador:
            - write
            - read


components:
  schemas:
    ListaProjetoResponse:
      type: object
      properties:
        listaprojetos:
          type: array
          items:
            $ref: '#/components/schemas/Projeto'

    Projeto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        status:
          type: string
          enum: [A_INICIAR, EM_ANDAMENTO, ATRASADO, CONCLUIDO]
        responsavelId:
          type: integer
          format: int64
        dtInicioPrevisto:
          type: string
          format: date
        dtTerminoPrevisto:
          type: string
          format: date
        dtInicioRealizado:
          type: string
          format: date
        dtTerminoRealizado:
          type: string
          format: date

    Usuario:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        email:
          type: string
        password:
          type: string
          format: password

    Cargo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nmCargo:
          type: string

    Responsavel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        email:
          type: string
        cargoId:
          type: integer
          format: int64
        secretariaId:
          type: integer
          format: int64

    Secretaria:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nmSecretaria:
          type: string


    SucessMessage:
      type: object
      properties:
        message:
          type: string
          example: "Sucesso"
        code:
          type: integer
          example: 0

    ErrorMessage:
      type: object
      properties:
        message:
          type: string
          example: "Error message"
        errorCode:
          type: integer
          example: 123

  securitySchemes:
    gerenciador:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write: escrita
            read: leitura

    api_key:
      type: apiKey
      name: api_key
      in: header