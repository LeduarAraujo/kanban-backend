openapi: 3.0.3
info:
  title: Kanban Backend API - OpenAPI 3.0
  description: API para gerenciamento de projetos Kanban, responsáveis e indicadores.
  contact:
    email: leduar.araujo@hotmail.com
  version: 1.0.0

tags:
  - name: Projeto
    description: Dados relacionados aos projetos
  - name: Responsavel
    description: Dados relacionados aos responsaveis dos projetos
  - name: Indicador
    description: Dados dos indicadores
  - name: Usuario
    description: Dados de cadastro do usuário
  - name: Secretaria
    description: Dados das secretarias
  - name: ItemProjeto
    description: Dados os itens dos projetos, tais como tarefas, bugs, etc.

paths:
  /projetos:
    get:
      operationId: listarProjetos
      tags:
        - Projeto
      summary: Lista todos os projetos
      description: Lista de projetos
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            default: 20
        - name: sort
          in: query
          required: false
          schema:
            type: string
            example: nome,asc
            default: id
        - name: acess_token
          in: query
          required: true
          schema:
            type: string
        - name: idUsuarioLogado
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListaProjetoResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'

    post:
      operationId: cadastrarProjeto
      tags:
        - Projeto
      summary: Realiza o cadastro de Projetos
      description: Realiza o cadastro de Projetos
      parameters:
        - name: acess_token
          in: query
          required: true
          schema:
            type: string
        - name: idUsuarioLogado
          in: query
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                descricao:
                  type: string
                status:
                  $ref: '#/components/schemas/StatusProjeto'
                responsavelId:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        format: int64
                dtInicioPrevisto:
                  type: string
                  format: date
                dtTerminoPrevisto:
                  type: string
                  format: date
                dtInicioRealizado:
                  type: string
                  format: date
                dtTerminoRealizado:
                  type: string
                  format: date
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projeto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - gerenciador:
            - write
            - read

  /projetos/{id}:
    get:
      operationId: buscarProjetoPorId
      tags:
        - Projeto
      summary: Buscar projeto por ID
      description: Retorna um projeto específico pelo ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID do projeto
          schema:
            type: integer
            format: int64
        - name: acess_token
          in: query
          required: true
          schema:
            type: string
        - name: idUsuarioLogado
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projeto'
        '404':
          description: Projeto não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'

    put:
      operationId: atualizarProjeto
      tags:
        - Projeto
      summary: Atualizar projeto
      description: Atualiza um projeto existente
      parameters:
        - name: id
          in: path
          required: true
          description: ID do projeto
          schema:
            type: integer
            format: int64
        - name: acess_token
          in: query
          required: true
          schema:
            type: string
        - name: idUsuarioLogado
          in: query
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                descricao:
                  type: string
                status:
                  $ref: '#/components/schemas/StatusProjeto'
                responsavelId:
                  type: array
                  items:
                    type: integer
                    format: int64
                    properties:
                      id:
                        type: integer
                        format: int64
                dtInicioPrevisto:
                  type: string
                  format: date
                dtTerminoPrevisto:
                  type: string
                  format: date
                dtInicioRealizado:
                  type: string
                  format: date
                dtTerminoRealizado:
                  type: string
                  format: date
                diasAtraso:
                  type: integer
                percentualTempoRestante:
                  type: number
                  format: float
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projeto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Projeto não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'

    delete:
      operationId: excluirProjeto
      tags:
        - Projeto
      summary: Excluir projeto
      description: Exclui um projeto
      parameters:
        - name: id
          in: path
          required: true
          description: ID do projeto
          schema:
            type: integer
            format: int64
        - name: acess_token
          in: query
          required: true
          schema:
            type: string
        - name: idUsuarioLogado
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Projeto excluído com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
        '404':
          description: Projeto não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'

  /projetos/{id}/status:
    put:
      operationId: moverStatusProjeto
      tags:
        - Projeto
      summary: Mover status do projeto
      description: Move o projeto para um novo status seguindo as regras de transição
      parameters:
        - name: id
          in: path
          required: true
          description: ID do projeto
          schema:
            type: integer
            format: int64
        - name: novoStatus
          in: query
          required: true
          description: Novo status do projeto
          schema:
            $ref: '#/components/schemas/StatusProjeto'
        - name: acess_token
          in: query
          required: true
          schema:
            type: string
        - name: idUsuarioLogado
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Status alterado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projeto'
        '400':
          description: Transição inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Projeto não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'

  /projetos/por-status:
    get:
      operationId: listarProjetosPorStatus
      tags:
        - Projeto
      summary: Listar projetos por status
      description: Lista projetos filtrados por status específico
      parameters:
        - name: status
          in: query
          required: true
          description: Status para filtrar
          schema:
            $ref: '#/components/schemas/StatusProjeto'
        - name: page
          in: query
          description: Número da página
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          description: Tamanho da página
          schema:
            type: integer
            default: 20
        - name: sort
          in: query
          description: Campo para ordenação
          schema:
            type: string
            default: id
        - name: acess_token
          in: query
          required: true
          schema:
            type: string
        - name: idUsuarioLogado
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListaProjetoResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'

  /indicadores/projetos/quantidade-por-status:
    get:
      operationId: quantidadeProjetosPorStatus
      tags:
        - Indicador
      summary: Quantidade de projetos por status
      description: Retorna a quantidade de projetos agrupados por status
      parameters:
        - name: acess_token
          in: query
          required: true
          schema:
            type: string
        - name: idUsuarioLogado
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Indicadores retornados com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    statusProjeto:
                      $ref: '#/components/schemas/StatusProjeto'
                    quantidade:
                      type: integer
                      format: int64
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'

  /indicadores/projetos/media-atraso-por-status:
    get:
      operationId: mediaDiasAtrasoPorStatus
      tags:
        - Indicador
      summary: Média de dias de atraso por status
      description: Retorna a média de dias de atraso para um status específico
      parameters:
        - name: status
          in: query
          required: true
          description: Status do projeto para calcular a média
          schema:
            $ref: '#/components/schemas/StatusProjeto'
        - name: acess_token
          in: query
          required: true
          schema:
            type: string
        - name: idUsuarioLogado
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Média calculada com sucesso
          content:
            application/json:
              schema:
                type: number
                format: double
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'

  /usuario:
    post:
      operationId: cadastrarUsuario
      tags:
        - Usuario
      summary: realiza o cadastro do usuario
      description: realiza o cadastro do usuario para permitir o uso dos usuarios

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                email:
                  type: string
                  format: email
                senha:
                  type: string
                  format: password
                  minLength: 6
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - gerenciador:
            - write
            - read

  /usuario/login:
    post:
      operationId: loginUsuario
      tags:
        - Usuario
      summary: Realiza o login do usuário
      description: 'Realiza o login do usuário'

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                senha:
                  type: string
                  format: password
                  minLength: 6
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'

  /secretaria:
    get:
      operationId: listarSecretarias
      tags:
        - Secretaria
      summary: Lista todas as secretarias
      description: ''
      parameters:
        - name: acess_token
          in: query
          required: true
          schema:
            type: string
        - name: idUsuarioLogado
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Secretaria'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'

    post:
      operationId: cadastrarSecretaria
      tags:
        - Secretaria
      summary: Cadastra uma nova secretaria
      description: ''
      parameters:
        - name: acess_token
          in: query
          required: true
          schema:
            type: string
        - name: idUsuarioLogado
          in: query
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nmSecretaria:
                  type: string
                descricao:
                  type: string
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'


  /secretaria/{id}:
    get:
      operationId: buscarSecretariaPorId
      tags:
        - Secretaria
      summary: Busca uma secretaria pelo ID
      description: ''
      parameters:
        - name: id
          in: path
          required: true
          description: ID da secretaria a ser buscada
          schema:
            type: integer
            format: int64
        - name: acess_token
          in: query
          required: true
          schema:
            type: string
        - name: idUsuarioLogado
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secretaria'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      operationId: atualizarSecretariaPorId
      tags:
        - Secretaria
      summary: Atualiza uma secretaria existente
      description: ''
      parameters:
        - name: id
          in: path
          required: true
          description: ID da secretaria a ser atualizada
          schema:
            type: integer
            format: int64
        - name: acess_token
          in: query
          required: true
          schema:
            type: string
        - name: idUsuarioLogado
          in: query
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nmSecretaria:
                  type: string
                descricao:
                  type: string
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      operationId: excluirSecretaria
      tags:
        - Secretaria
      summary: Exclui uma secretaria existente
      description: ''
      parameters:
        - name: id
          in: path
          required: true
          description: ID da secretaria a ser excluída
          schema:
            type: integer
            format: int64
        - name: acess_token
          in: query
          required: true
          schema:
            type: string
        - name: idUsuarioLogado
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'


  /responsavel:
    get:
      operationId: listarResponsaveis
      tags:
        - Responsavel
      summary: Lista todos os responsáveis
      description: ''
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            default: 20
        - name: sort
          in: query
          required: false
          schema:
            type: string
            example: id,asc
            default: id
        - name: acess_token
          in: query
          required: true
          schema:
            type: string
        - name: idUsuarioLogado
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListaResponsavelResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    post:
      operationId: cadastrarResponsavel
      tags:
        - Responsavel
      summary: Cadastra um novo responsável
      description: ''
      parameters:
        - name: acess_token
          in: query
          required: true
          schema:
            type: string
        - name: idUsuarioLogado
          in: query
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CadastroResponsavelBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Responsavel'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      operationId: atualizarResponsavelPorId
      tags:
        - Responsavel
      summary: Atualiza um responsável existente
      description: ''
      parameters:
        - name: id
          in: query
          required: true
          description: ID do responsável a ser atualizado
          schema:
            type: integer
            format: int64
        - name: acess_token
          in: query
          required: true
          schema:
            type: string
        - name: idUsuarioLogado
          in: query
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AtualizarResponsavelBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Responsavel'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      operationId: excluirResponsavel
      tags:
        - Responsavel
      summary: Exclui um responsável existente
      description: ''
      parameters:
        - name: id
          in: query
          required: true
          description: ID do responsável a ser excluído
          schema:
            type: integer
            format: int64
        - name: acess_token
          in: query
          required: true
          schema:
            type: string
        - name: idUsuarioLogado
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'

  /item-projeto:
    get:
      operationId: listarItensProjeto
      tags:
        - ItemProjeto
      summary: Listar todos os itens de projeto
      description: Lista todos os itens de projeto
      parameters:
        - name: idItemProjeto
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: acess_token
          in: query
          required: true
          schema:
            type: string
        - name: idUsuarioLogado
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemProjetoResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    post:
      operationId: incluirItemProjeto
      tags:
        - ItemProjeto
      summary: Inclui um novo item de projeto
      description: Inclui um novo item de projeto
      parameters:
        - name: acess_token
          in: query
          required: true
          schema:
            type: string
        - name: idUsuarioLogado
          in: query
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemProjetoResponse'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemProjetoResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      operationId: atualizarItemProjeto
      tags:
        - ItemProjeto
      summary: Atualiza um item de projeto existente
      description: Atualiza um item de projeto existente
      parameters:
        - name: acess_token
          in: query
          required: true
          schema:
            type: string
        - name: idUsuarioLogado
          in: query
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemProjetoResponse'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemProjetoResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      operationId: excluirItemProjeto
      tags:
        - ItemProjeto
      summary: Exclui um item de projeto existente
      description: Exclui um item de projeto existente
      parameters:
        - name: idItemProjeto
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: acess_token
          in: query
          required: true
          schema:
            type: string
        - name: idUsuarioLogado
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'

components:
  schemas:
    ListaProjetoResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Projeto'
        pageable:
          type: object
          properties:
            pageNumber:
              type: integer
            pageSize:
              type: integer
            offset:
              type: integer
        totalElements:
          type: integer
        totalPages:
          type: integer
        last:
          type: boolean
        size:
          type: integer
        number:
          type: integer
        sort:
          type: string
          default: id
        first:
          type: boolean
        numberOfElements:
          type: integer
        empty:
          type: boolean

    Projeto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        descricao:
          type: string
        status:
          $ref: '#/components/schemas/StatusProjeto'
        responsavelId:
          type: integer
          format: int64
        dtInicioPrevisto:
          type: string
          format: date
        dtTerminoPrevisto:
          type: string
          format: date
        dtInicioRealizado:
          type: string
          format: date
        dtTerminoRealizado:
          type: string
          format: date
        diasAtraso:
          type: integer
        percentualTempoRestante:
          type: number
          format: float

    Usuario:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        email:
          type: string
          format: email
        senha:
          type: string
          format: password
          minLength: 6

    Cargo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nmCargo:
          type: string

    ListaResponsavelResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Responsavel'
        pageable:
          type: object
          properties:
            pageNumber:
              type: integer
            pageSize:
              type: integer
            offset:
              type: integer
        totalElements:
          type: integer
        totalPages:
          type: integer
        last:
          type: boolean
        size:
          type: integer
        number:
          type: integer
        sort:
          type: string
          default: id
        first:
          type: boolean
        numberOfElements:
          type: integer
        empty:
          type: boolean

    Responsavel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nome:
          type: string
        email:
          type: string
          format: email
        cargoId:
          type: integer
          format: int64
        nmCargo:
          type: string
        secretariaId:
          type: integer
          format: int64
        nmSecretaria:
          type: string

    Secretaria:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nmSecretaria:
          type: string
        descricao:
          type: string

    CadastroResponsavelBody:
      type: object
      properties:
        cargoId:
          type: integer
          format: int64
        secretariaId:
          type: integer
          format: int64
        usuario:
          $ref: '#/components/schemas/Usuario'

    AtualizarResponsavelBody:
      type: object
      properties:
        cargoId:
          type: integer
          format: int64
        secretariaId:
          type: integer
          format: int64

    ItemProjetoResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        projeto_id:
          type: integer
          format: int64
        titulo:
          type: string
        descricao:
          type: string
        responsavelId:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
        status_item:
          $ref: '#/components/schemas/StatusItemProjeto'
        prioridade:
          $ref: '#/components/schemas/PrioridadeItemProjeto'



    StatusProjeto:
      type: string
      enum: [ A_INICIAR, EM_ANDAMENTO, ATRASADO, CONCLUIDO ]

    PrioridadeItemProjeto:
      type: string
      enum: [ BAIXA, MEDIA, ALTA ]

    StatusItemProjeto:
      type: string
      enum: [ EM_ANALISE, A_FAZER, EM_PROGRESSO, EM_TESTE, EM_REVISAO, CONCLUIDO ]

    LoginResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        token:
          type: string
          description: Token de autenticação
        nome:
          type: string
        email:
          type: string
          format: email

    SuccessMessage:
      type: object
      properties:
        message:
          type: string
          example: "Sucesso"
        code:
          type: integer
          example: 0

    ErrorMessage:
      type: object
      properties:
        message:
          type: string
          example: "Error message"
        errorCode:
          type: integer
          example: 123

  securitySchemes:
    gerenciador:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write: escrita
            read: leitura

    api_key:
      type: apiKey
      name: api_key
      in: header